<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ca776eff-343e-47d6-913f-e185c85fe7d2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/celery_app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/models.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/serializers/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/services/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/services/location_integrations/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/services/location_integrations/base.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/services/location_integrations/nominatim_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/services/location_manager.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/tasks/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/location/tasks/location_tasks.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/services/limiter_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/services/redis_service.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Pipfile" beforeDir="false" afterPath="$PROJECT_DIR$/Pipfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Pipfile.lock" beforeDir="false" afterPath="$PROJECT_DIR$/Pipfile.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/devops/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/devops/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/celery_worker.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/api/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/api/game_api.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/api/game_api.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/constants.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/constants.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/models.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/serializers/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/api/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/serializers/game_serializer.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/serializers/game_serializer.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/services/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/api/location_api.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/services/game_service.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/services/game_service.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/game/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/location/urls.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/models/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/settings/default.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/settings/default.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/urls.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2YZZwvwVv0shSu4bvY7h6RpNN94" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.devops/docker-compose.yaml: Compose Deployment.executor": "Run",
    "Python.Celery.executor": "Run",
    "Python.TestCordsFlask.executor": "Run",
    "Python.app (1).executor": "Run",
    "Python.app.executor": "Run",
    "Python.app123.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "Shell Script.Unnamed (1).executor": "Run",
    "Shell Script.Unnamed.executor": "Run",
    "com.google.cloudcode.ide_session_index": "20240122_0001",
    "last_opened_file_path": "D:/Projects/PetProjectss/TestCordsFlask/src",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\src" />
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\devops" />
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask" />
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\src\game" />
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\src\game\api" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\src\users" />
      <recent name="D:\Projects\PetProjectss\TicTacToeFlask\src\models" />
    </key>
  </component>
  <component name="RunManager" selected="Python.app123">
    <configuration default="true" type="DjangoTestsConfigurationType">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Celery" type="PythonConfigurationType" factoryName="Python">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="CREDENTIAL_SERVICE_URL" value="http://127.0.0.1:8002" />
        <env name="DEBUG" value="True" />
        <env name="DETAILED_LOGS" value="True" />
        <env name="LOCAL" value="False" />
        <env name="PG_DB" value="TicTacToe" />
        <env name="PG_DB_TEST" value="frontgate_test" />
        <env name="PG_HOST" value="127.0.0.1" />
        <env name="PG_PASSWORD" value="admin" />
        <env name="PG_PASSWORD_TEST" value="credential_storage" />
        <env name="PG_PORT" value="6432" />
        <env name="PG_PORT_TEST" value="5437" />
        <env name="PG_USER" value="admin" />
        <env name="PG_USER_TEST" value="credential_storage" />
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="SERVER_PORT" value="8015" />
        <env name="SETTINGS_FILE" value="src.settings.default" />
        <env name="WEB_SERVER_AUTO_RELOAD" value="True" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.8.10 WSL (Ubuntu-20.04): (/home/samuel/.virtualenvs/TestCordsFlask-NJ1oD1XA/bin/python3.8)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <EXTENSION ID="software.aws.toolkits.jetbrains.core.execution.PythonAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </EXTENSION>
      <option name="SCRIPT_NAME" value="//wsl.localhost/Ubuntu-20.04/home/samuel/.virtualenvs/TestCordsFlask-NJ1oD1XA/bin/celery" />
      <option name="PARAMETERS" value="-A celery_app worker --loglevel=info -n worker1@%h" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="app (1)" type="PythonConfigurationType" factoryName="Python">
      <module name="TicTacToeFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="WEB_SERVER_AUTO_RELOAD" value="True" />
        <env name="DEBUG" value="True" />
        <env name="LOCAL" value="False" />
        <env name="SETTINGS_FILE" value="src.settings.default" />
        <env name="PG_DB" value="TicTacToe" />
        <env name="PG_USER" value="aurora" />
        <env name="PG_PASSWORD" value="aurorapass" />
        <env name="PG_HOST" value="0.0.0.0" />
        <env name="PG_PORT" value="5431" />
        <env name="PG_DB_TEST" value="frontgate_test" />
        <env name="PG_USER_TEST" value="credential_storage" />
        <env name="PG_PASSWORD_TEST" value="credential_storage" />
        <env name="PG_PORT_TEST" value="5437" />
        <env name="SERVER_PORT" value="8015" />
        <env name="CREDENTIAL_SERVICE_URL" value="http://127.0.0.1:8002" />
        <env name="DETAILED_LOGS" value="True" />
      </envs>
      <option name="SDK_HOME" value="\\wsl$\Ubuntu-20.04/home/samuel/.virtualenvs/TicTacToeFlask-s4LHn_uy/bin/python3.9" />
      <option name="SDK_NAME" value="Python 3.8.10 WSL (Ubuntu-20.04): (/home/samuel/.virtualenvs/TestCordsFlask-NJ1oD1XA/bin/python3.8)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <EXTENSION ID="software.aws.toolkits.jetbrains.core.execution.PythonAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </EXTENSION>
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="runserver" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="app123" type="PythonConfigurationType" factoryName="Python">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="CREDENTIAL_SERVICE_URL" value="http://127.0.0.1:8002" />
        <env name="DEBUG" value="True" />
        <env name="DETAILED_LOGS" value="True" />
        <env name="LOCAL" value="False" />
        <env name="PG_DB" value="TicTacToe" />
        <env name="PG_DB_TEST" value="frontgate_test" />
        <env name="PG_HOST" value="127.0.0.1" />
        <env name="PG_PASSWORD" value="admin" />
        <env name="PG_PASSWORD_TEST" value="credential_storage" />
        <env name="PG_PORT" value="6432" />
        <env name="PG_PORT_TEST" value="5437" />
        <env name="PG_USER" value="admin" />
        <env name="PG_USER_TEST" value="credential_storage" />
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="SERVER_PORT" value="8015" />
        <env name="SETTINGS_FILE" value="src.settings.default" />
        <env name="WEB_SERVER_AUTO_RELOAD" value="True" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.8.10 WSL (Ubuntu-20.04): (/home/samuel/.virtualenvs/TestCordsFlask-NJ1oD1XA/bin/python3.8)" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <EXTENSION ID="software.aws.toolkits.jetbrains.core.execution.PythonAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </EXTENSION>
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="runserver" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="TicTacToeFlask" type="Python.FlaskServer">
      <module name="TicTacToeFlask" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="\\wsl$\Ubuntu-20.04/home/samuel/.virtualenvs/TicTacToeFlask-s4LHn_uy/bin/python3.9" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <EXTENSION ID="software.aws.toolkits.jetbrains.core.execution.PythonAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </EXTENSION>
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Unnamed (1)" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="workon TestCordsFlask-NJ1oD1XA; alembic revision --autogenerate -m &quot;Initial migration&quot; " />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="workon TicTacToeFlask-s4LHn_uy; alembic upgrade head" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="false" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$/" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs>
        <env name="CREDENTIAL_SERVICE_URL" value="http://127.0.0.1:8002" />
        <env name="DEBUG" value="True" />
        <env name="DETAILED_LOGS" value="True" />
        <env name="LOCAL" value="False" />
        <env name="PG_DB" value="TicTacToe" />
        <env name="PG_DB_TEST" value="frontgate_test" />
        <env name="PG_HOST" value="127.0.0.1" />
        <env name="PG_PASSWORD" value="admin" />
        <env name="PG_PASSWORD_TEST" value="credential_storage" />
        <env name="PG_PORT" value="6432" />
        <env name="PG_PORT_TEST" value="5437" />
        <env name="PG_USER" value="admin" />
        <env name="PG_USER_TEST" value="credential_storage" />
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="SERVER_PORT" value="8015" />
        <env name="SETTINGS_FILE" value="src.settings.default" />
        <env name="WEB_SERVER_AUTO_RELOAD" value="True" />
      </envs>
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="ShConfigurationType" nameIsGenerated="true">
      <option name="SCRIPT_TEXT" value="workon TestCordsFlask-NJ1oD1XA; alembic upgrade head" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="workon TicTacToeFlask-s4LHn_uy; alembic upgrade head" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs>
        <env name="CREDENTIAL_SERVICE_URL" value="http://127.0.0.1:8002" />
        <env name="DEBUG" value="True" />
        <env name="DETAILED_LOGS" value="True" />
        <env name="LOCAL" value="False" />
        <env name="PG_DB" value="TicTacToe" />
        <env name="PG_DB_TEST" value="frontgate_test" />
        <env name="PG_HOST" value="127.0.0.1" />
        <env name="PG_PASSWORD" value="admin" />
        <env name="PG_PASSWORD_TEST" value="credential_storage" />
        <env name="PG_PORT" value="6432" />
        <env name="PG_PORT_TEST" value="5437" />
        <env name="PG_USER" value="admin" />
        <env name="PG_USER_TEST" value="credential_storage" />
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="SERVER_PORT" value="8015" />
        <env name="SETTINGS_FILE" value="src.settings.default" />
        <env name="WEB_SERVER_AUTO_RELOAD" value="True" />
      </envs>
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration name="devops/docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="devops/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docs" factoryName="Docutils task">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="docutils_input_file" value="" />
      <option name="docutils_output_file" value="" />
      <option name="docutils_params" value="" />
      <option name="docutils_task" value="" />
      <option name="docutils_open_in_browser" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docs" factoryName="Sphinx task">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="docutils_input_file" value="" />
      <option name="docutils_output_file" value="" />
      <option name="docutils_params" value="" />
      <option name="docutils_task" value="" />
      <option name="docutils_open_in_browser" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Autodetect">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <module name="TestCordsFlask" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.devops/docker-compose.yaml: Compose Deployment" />
      <item itemvalue="Flask server.TicTacToeFlask" />
      <item itemvalue="Python.Celery" />
      <item itemvalue="Python.app (1)" />
      <item itemvalue="Python.app123" />
      <item itemvalue="Shell Script.Unnamed" />
      <item itemvalue="Shell Script.Unnamed (1)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.devops/docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ca776eff-343e-47d6-913f-e185c85fe7d2" name="Changes" comment="" />
      <created>1700735303330</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1700735303330</updated>
      <workItem from="1700735316592" duration="51519000" />
      <workItem from="1701075697816" duration="1895000" />
      <workItem from="1704812480858" duration="1015000" />
      <workItem from="1705915770275" duration="597000" />
      <workItem from="1721396701037" duration="112000" />
      <workItem from="1721396814574" duration="8000" />
      <workItem from="1721396849484" duration="166000" />
      <workItem from="1721397115106" duration="10321000" />
    </task>
    <task id="LOCAL-00001" summary="init commit">
      <created>1700739869599</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1700739869600</updated>
    </task>
    <task id="LOCAL-00002" summary="Game">
      <created>1700787001842</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1700787001842</updated>
    </task>
    <task id="LOCAL-00003" summary="check_tic_tac_toe">
      <created>1700819824679</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1700819824679</updated>
    </task>
    <task id="LOCAL-00004" summary="fix docker">
      <created>1700821654444</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1700821654444</updated>
    </task>
    <task id="LOCAL-00005" summary="update Readme">
      <created>1700822858053</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1700822858053</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="init commit" />
    <MESSAGE value="Game" />
    <MESSAGE value="check_tic_tac_toe" />
    <MESSAGE value="fix docker" />
    <MESSAGE value="update Readme" />
    <option name="LAST_COMMIT_MESSAGE" value="update Readme" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/users/api/users_api.py</url>
          <line>12</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/users/api/users_api.py</url>
          <line>21</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/users/api/users_api.py</url>
          <line>15</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/users/api/users_api.py</url>
          <line>28</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/game/services/game_service.py</url>
          <line>73</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/game/services/game_service.py</url>
          <line>71</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/game/services/game_service.py</url>
          <line>65</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/game/services/game_service.py</url>
          <line>70</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/location/api/location_api.py</url>
          <line>8</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/TicTacToeFlask$app.coverage" NAME="app Coverage Results" MODIFIED="1701075852223" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/TicTacToeFlask$manage.coverage" NAME="app Coverage Results" MODIFIED="1700821633338" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/TestCordsFlask$TestCordsFlask.coverage" NAME="Celery Coverage Results" MODIFIED="1721405977968" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/" />
    <SUITE FILE_PATH="coverage/TestCordsFlask$app123.coverage" NAME="app123 Coverage Results" MODIFIED="1721405984284" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>